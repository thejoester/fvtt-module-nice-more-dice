name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Extract Version From Tag
        id: get_version
        uses: battila7/get-version-action@v2

      # Patch the manifest INSIDE nice-more-dice so the ZIP has correct fields
      - name: Update module.json (jq)
        run: |
          VERSION='${{ steps.get_version.outputs.version-without-v }}'
          MANIFEST='https://github.com/${{ github.repository }}/releases/latest/download/module.json'
          DOWNLOAD='https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/dsn.zip'
          jq --arg v "$VERSION" --arg m "$MANIFEST" --arg d "$DOWNLOAD" \
             '.version=$v | .manifest=$m | .download=$d' \
             nice-more-dice/module.json > nice-more-dice/module.json.tmp
          mv nice-more-dice/module.json.tmp nice-more-dice/module.json

      # Copy the edited manifest to repo root so we can upload it as a separate asset
      - name: Copy manifest to root for release asset
        run: cp nice-more-dice/module.json module.json

      # ZIP only the contents of nice-more-dice/, preserving subfolders, no top-level wrapper
      - name: Create Module Archive
        working-directory: nice-more-dice
        run: zip -r ../dsn.zip .

      # Pull release notes from Changelog.md (note the capitalization)
      - uses: release-flow/keep-a-changelog-action@v3
        id: changelog
        with:
          command: query
          changelog: CHANGELOG.md
          version: ${{ steps.get_version.outputs.version-without-v }}

      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          draft: ${{ github.event.release.draft }}
          prerelease: ${{ github.event.release.prerelease }}
          name: ${{ steps.get_version.outputs.version-without-v }}
          body: ${{ steps.changelog.outputs.release-notes }}
          artifacts: |
            module.json
            dsn.zip

      # Optional: publish to Foundry website (unchanged)
      - name: Publish Module to FoundryVTT Website
        id: publish-to-foundry-website
        if: ${{ ! github.event.release.prerelease }}
        uses: cs96and/FoundryVTT-release-package@v1
        with:
          package-token: ${{ secrets.FOUNDRY_RELEASE_TOKEN }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
